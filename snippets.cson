# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.source.ruby':
  'must_equal':
    'prefix': 'ae'
    'body': 'assert_equal ${1:expected}, ${0:actual}'
  'source rubygems':
    'prefix': 'src'
    'body': "source 'https://rubygems.org'"

# '.text.html.elixir':
#   ''

'.source.elixir':
  'def with spec':
    'prefix': 'ds'
    'body': '''
            @spec $1 :: $2
            def $1 do
              $3
            end'''

'.text.html.elixir':
  'EEx Printing Tag':
    'prefix': '='
    'body': '<%= $1 %>'
  'EEx Non-Printing Tag':
    'prefix': '%'
    'body': '<% $1 %>'
  'EEx if':
    'prefix': 'if'
    'body': """
              <%= if ${1:condition} do %>
                $2
              <% end %>
            """

          # <%= if @current_user do %>
          #   <%= link "Logout", to: auth_path(@conn, :delete), method: :delete, class: "btn btn-danger" %>
          # <% else %>
          #   <a class="btn btn-primary btn-lg" href="/auth/github">
          #     <i class="fa fa-github"></i>
          #     Sign in with GitHub
          #   </a>
          # <% end %>

'.source.elm':
    'test':
      'prefix': 'test'
      'body': """
          test "$1" <|
                \\\\() ->
                   ${2:123}
                   |> Expect.equal ${3:456}
               """
#   'let':
#     'prefix': 'let'
#     'body': '''
#             let
#               $1 =
#                 $2
#             in
#               $3
#             '''
#   'updateNoOp':
#     'prefix': 'm'
#     'body': 'model ! []'
#   'if':
#     'prefix': 'if'
#     'body': '''
#             if $1 then
#               $2
#             else
#               $3
#             '''
